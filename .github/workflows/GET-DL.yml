name: GET-DL
on: started
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Installation depends
      run: |
        sudo apt-get update
        sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync subversion g++ zlib1g-dev build-essential git python python3 python3-distutils libncurses5-dev gawk gettext unzip file libssl-dev wget libelf-dev ecj fastjar java-propose-classpath
    - name: Clone source code
      run: |
        cd /home/runner/
        git clone https://github.com/netusb/openmptcprouter
        cd openmptcprouter
        git checkout master
        OMR_TARGET="arm_cortex-a15_neon-vfpv4" OMR_FEED_SRC="master" ./build.sh
    - name: Generate config file
      run: |
        cp -r /home/runner/openmptcprouter/.config /home/runner/openmptcprouter/arm_cortex-a15_neon-vfpv4/source/.config
        cd /home/runner/openmptcprouter/arm_cortex-a15_neon-vfpv4/source/
        make defconfig
    - name: Download package
      run: |
        cd /home/runner/openmptcprouter/arm_cortex-a15_neon-vfpv4/source/ && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
#    - name: Build
#      run: |
#        cd openmptcprouter/arm_cortex-a15_neon-vfpv4/source/
#        make -j$(nproc)
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: omr-dl
        path: /home/runner/openmptcprouter
#        path: /home/runner/openmptcprouter/arm_cortex-a15_neon-vfpv4/source/dl
